# Generated by Django 2.2 on 2020-05-09 17:21

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, verbose_name='name')),
                ('characteristics', models.TextField(blank=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, verbose_name='name')),
                ('tool_type', models.IntegerField(choices=[(1, 'pencil'), (2, 'pen'), (3, 'brush'), (4, 'paint'), (5, 'pastel'), (6, 'charcoal')], db_index=True, verbose_name='tool type')),
                ('materials', models.ManyToManyField(db_index=True, to='core.Material', verbose_name='materials')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='name')),
                ('artist', models.CharField(blank=True, db_index=True, max_length=64, verbose_name='artist')),
                ('file', models.ImageField(db_index=True, upload_to='', verbose_name='file')),
                ('colours', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=7), blank=True, db_index=True, size=None, verbose_name='colours')),
                ('description', models.TextField(blank=True, db_index=True, verbose_name='description')),
                ('tools', models.ManyToManyField(db_index=True, to='core.Tool', verbose_name='tools')),
            ],
        ),
    ]
